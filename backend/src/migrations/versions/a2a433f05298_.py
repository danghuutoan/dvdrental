"""empty message

Revision ID: a2a433f05298
Revises: 
Create Date: 2021-07-22 22:39:20.638543

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a2a433f05298'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('actor', 'first_name',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.alter_column('actor', 'last_name',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.alter_column('actor', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_actor_last_name', table_name='actor')
    op.alter_column('address', 'address',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('address', 'district',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.alter_column('address', 'phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.alter_column('address', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('address', 'city_id',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.drop_index('idx_fk_city_id', table_name='address')
    op.alter_column('category', 'name',
               existing_type=sa.VARCHAR(length=25),
               nullable=True)
    op.alter_column('category', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('city', 'city',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('city', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('city', 'country_id',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.drop_index('idx_fk_country_id', table_name='city')
    op.alter_column('country', 'country',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('country', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('customer', 'first_name',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.alter_column('customer', 'last_name',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.alter_column('customer', 'activebool',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.alter_column('customer', 'create_date',
               existing_type=sa.DATE(),
               nullable=True,
               existing_server_default=sa.text("('now'::text)::date"))
    op.alter_column('customer', 'address_id',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.alter_column('customer', 'store_id',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.drop_index('idx_fk_address_id', table_name='customer')
    op.drop_index('idx_fk_store_id', table_name='customer')
    op.drop_index('idx_last_name', table_name='customer')
    op.drop_constraint('customer_address_id_fkey', 'customer', type_='foreignkey')
    op.create_foreign_key(None, 'customer', 'store', ['store_id'], ['store_id'])
    op.create_foreign_key(None, 'customer', 'address', ['address_id'], ['address_id'])
    op.alter_column('film', 'title',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('film', 'language_id',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.alter_column('film', 'rental_duration',
               existing_type=sa.SMALLINT(),
               nullable=True,
               existing_server_default=sa.text('3'))
    op.alter_column('film', 'rental_rate',
               existing_type=sa.NUMERIC(precision=4, scale=2),
               nullable=True,
               existing_server_default=sa.text('4.99'))
    op.alter_column('film', 'replacement_cost',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               nullable=True,
               existing_server_default=sa.text('19.99'))
    op.alter_column('film', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('film', 'fulltext',
               existing_type=postgresql.TSVECTOR(),
               nullable=True)
    op.drop_index('film_fulltext_idx', table_name='film')
    op.drop_index('idx_fk_language_id', table_name='film')
    op.drop_index('idx_title', table_name='film')
    op.drop_constraint('film_language_id_fkey', 'film', type_='foreignkey')
    op.create_foreign_key(None, 'film', 'language', ['language_id'], ['language_id'])
    op.alter_column('film_actor', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_fk_film_id', table_name='film_actor')
    op.drop_constraint('film_actor_film_id_fkey', 'film_actor', type_='foreignkey')
    op.drop_constraint('film_actor_actor_id_fkey', 'film_actor', type_='foreignkey')
    op.alter_column('film_category', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('film_category_category_id_fkey', 'film_category', type_='foreignkey')
    op.drop_constraint('film_category_film_id_fkey', 'film_category', type_='foreignkey')
    op.alter_column('inventory', 'film_id',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.alter_column('inventory', 'store_id',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.alter_column('inventory', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_store_id_film_id', table_name='inventory')
    op.drop_constraint('inventory_film_id_fkey', 'inventory', type_='foreignkey')
    op.create_foreign_key(None, 'inventory', 'store', ['store_id'], ['store_id'])
    op.create_foreign_key(None, 'inventory', 'film', ['film_id'], ['film_id'])
    op.alter_column('language', 'name',
               existing_type=sa.CHAR(length=20),
               nullable=True)
    op.alter_column('language', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('payment', 'customer_id',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.alter_column('payment', 'staff_id',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.alter_column('payment', 'rental_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('payment', 'amount',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               nullable=True)
    op.alter_column('payment', 'payment_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_index('idx_fk_customer_id', table_name='payment')
    op.drop_index('idx_fk_rental_id', table_name='payment')
    op.drop_index('idx_fk_staff_id', table_name='payment')
    op.drop_constraint('payment_customer_id_fkey', 'payment', type_='foreignkey')
    op.drop_constraint('payment_rental_id_fkey', 'payment', type_='foreignkey')
    op.drop_constraint('payment_staff_id_fkey', 'payment', type_='foreignkey')
    op.create_foreign_key(None, 'payment', 'rental', ['rental_id'], ['rental_id'])
    op.create_foreign_key(None, 'payment', 'staff', ['staff_id'], ['staff_id'])
    op.create_foreign_key(None, 'payment', 'customer', ['customer_id'], ['customer_id'])
    op.alter_column('rental', 'rental_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('rental', 'inventory_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('rental', 'customer_id',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.alter_column('rental', 'staff_id',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.alter_column('rental', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_fk_inventory_id', table_name='rental')
    op.drop_index('idx_unq_rental_rental_date_inventory_id_customer_id', table_name='rental')
    op.drop_constraint('rental_inventory_id_fkey', 'rental', type_='foreignkey')
    op.drop_constraint('rental_customer_id_fkey', 'rental', type_='foreignkey')
    op.create_foreign_key(None, 'rental', 'inventory', ['inventory_id'], ['inventory_id'])
    op.create_foreign_key(None, 'rental', 'customer', ['customer_id'], ['customer_id'])
    op.alter_column('staff', 'first_name',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.alter_column('staff', 'last_name',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.alter_column('staff', 'address_id',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.alter_column('staff', 'store_id',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.alter_column('staff', 'active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.alter_column('staff', 'username',
               existing_type=sa.VARCHAR(length=16),
               nullable=True)
    op.alter_column('staff', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('staff_address_id_fkey', 'staff', type_='foreignkey')
    op.create_foreign_key(None, 'staff', 'store', ['store_id'], ['store_id'])
    op.create_foreign_key(None, 'staff', 'address', ['address_id'], ['address_id'])
    op.alter_column('store', 'address_id',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.alter_column('store', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('store', 'manager_staff_id',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.drop_index('idx_unq_manager_staff_id', table_name='store')
    op.drop_constraint('store_manager_staff_id_fkey', 'store', type_='foreignkey')
    op.drop_constraint('store_address_id_fkey', 'store', type_='foreignkey')
    op.create_foreign_key(None, 'store', 'staff', ['manager_staff_id'], ['staff_id'])
    op.create_foreign_key(None, 'store', 'address', ['address_id'], ['address_id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'store', type_='foreignkey')
    op.drop_constraint(None, 'store', type_='foreignkey')
    op.create_foreign_key('store_address_id_fkey', 'store', 'address', ['address_id'], ['address_id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_foreign_key('store_manager_staff_id_fkey', 'store', 'staff', ['manager_staff_id'], ['staff_id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_index('idx_unq_manager_staff_id', 'store', ['manager_staff_id'], unique=False)
    op.alter_column('store', 'manager_staff_id',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.alter_column('store', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('store', 'address_id',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.drop_constraint(None, 'staff', type_='foreignkey')
    op.drop_constraint(None, 'staff', type_='foreignkey')
    op.create_foreign_key('staff_address_id_fkey', 'staff', 'address', ['address_id'], ['address_id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.alter_column('staff', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('staff', 'username',
               existing_type=sa.VARCHAR(length=16),
               nullable=False)
    op.alter_column('staff', 'active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.alter_column('staff', 'store_id',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.alter_column('staff', 'address_id',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.alter_column('staff', 'last_name',
               existing_type=sa.VARCHAR(length=45),
               nullable=False)
    op.alter_column('staff', 'first_name',
               existing_type=sa.VARCHAR(length=45),
               nullable=False)
    op.drop_constraint(None, 'rental', type_='foreignkey')
    op.drop_constraint(None, 'rental', type_='foreignkey')
    op.create_foreign_key('rental_customer_id_fkey', 'rental', 'customer', ['customer_id'], ['customer_id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_foreign_key('rental_inventory_id_fkey', 'rental', 'inventory', ['inventory_id'], ['inventory_id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_index('idx_unq_rental_rental_date_inventory_id_customer_id', 'rental', ['rental_date', 'inventory_id', 'customer_id'], unique=False)
    op.create_index('idx_fk_inventory_id', 'rental', ['inventory_id'], unique=False)
    op.alter_column('rental', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('rental', 'staff_id',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.alter_column('rental', 'customer_id',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.alter_column('rental', 'inventory_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('rental', 'rental_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_constraint(None, 'payment', type_='foreignkey')
    op.drop_constraint(None, 'payment', type_='foreignkey')
    op.drop_constraint(None, 'payment', type_='foreignkey')
    op.create_foreign_key('payment_staff_id_fkey', 'payment', 'staff', ['staff_id'], ['staff_id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_foreign_key('payment_rental_id_fkey', 'payment', 'rental', ['rental_id'], ['rental_id'], onupdate='CASCADE', ondelete='SET NULL')
    op.create_foreign_key('payment_customer_id_fkey', 'payment', 'customer', ['customer_id'], ['customer_id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_index('idx_fk_staff_id', 'payment', ['staff_id'], unique=False)
    op.create_index('idx_fk_rental_id', 'payment', ['rental_id'], unique=False)
    op.create_index('idx_fk_customer_id', 'payment', ['customer_id'], unique=False)
    op.alter_column('payment', 'payment_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('payment', 'amount',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               nullable=False)
    op.alter_column('payment', 'rental_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('payment', 'staff_id',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.alter_column('payment', 'customer_id',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.alter_column('language', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('language', 'name',
               existing_type=sa.CHAR(length=20),
               nullable=False)
    op.drop_constraint(None, 'inventory', type_='foreignkey')
    op.drop_constraint(None, 'inventory', type_='foreignkey')
    op.create_foreign_key('inventory_film_id_fkey', 'inventory', 'film', ['film_id'], ['film_id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_index('idx_store_id_film_id', 'inventory', ['store_id', 'film_id'], unique=False)
    op.alter_column('inventory', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('inventory', 'store_id',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.alter_column('inventory', 'film_id',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.create_foreign_key('film_category_film_id_fkey', 'film_category', 'film', ['film_id'], ['film_id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_foreign_key('film_category_category_id_fkey', 'film_category', 'category', ['category_id'], ['category_id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.alter_column('film_category', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_foreign_key('film_actor_actor_id_fkey', 'film_actor', 'actor', ['actor_id'], ['actor_id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_foreign_key('film_actor_film_id_fkey', 'film_actor', 'film', ['film_id'], ['film_id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_index('idx_fk_film_id', 'film_actor', ['film_id'], unique=False)
    op.alter_column('film_actor', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint(None, 'film', type_='foreignkey')
    op.create_foreign_key('film_language_id_fkey', 'film', 'language', ['language_id'], ['language_id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_index('idx_title', 'film', ['title'], unique=False)
    op.create_index('idx_fk_language_id', 'film', ['language_id'], unique=False)
    op.create_index('film_fulltext_idx', 'film', ['fulltext'], unique=False)
    op.alter_column('film', 'fulltext',
               existing_type=postgresql.TSVECTOR(),
               nullable=False)
    op.alter_column('film', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('film', 'replacement_cost',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               nullable=False,
               existing_server_default=sa.text('19.99'))
    op.alter_column('film', 'rental_rate',
               existing_type=sa.NUMERIC(precision=4, scale=2),
               nullable=False,
               existing_server_default=sa.text('4.99'))
    op.alter_column('film', 'rental_duration',
               existing_type=sa.SMALLINT(),
               nullable=False,
               existing_server_default=sa.text('3'))
    op.alter_column('film', 'language_id',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.alter_column('film', 'title',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_constraint(None, 'customer', type_='foreignkey')
    op.drop_constraint(None, 'customer', type_='foreignkey')
    op.create_foreign_key('customer_address_id_fkey', 'customer', 'address', ['address_id'], ['address_id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_index('idx_last_name', 'customer', ['last_name'], unique=False)
    op.create_index('idx_fk_store_id', 'customer', ['store_id'], unique=False)
    op.create_index('idx_fk_address_id', 'customer', ['address_id'], unique=False)
    op.alter_column('customer', 'store_id',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.alter_column('customer', 'address_id',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.alter_column('customer', 'create_date',
               existing_type=sa.DATE(),
               nullable=False,
               existing_server_default=sa.text("('now'::text)::date"))
    op.alter_column('customer', 'activebool',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.alter_column('customer', 'last_name',
               existing_type=sa.VARCHAR(length=45),
               nullable=False)
    op.alter_column('customer', 'first_name',
               existing_type=sa.VARCHAR(length=45),
               nullable=False)
    op.alter_column('country', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('country', 'country',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.create_index('idx_fk_country_id', 'city', ['country_id'], unique=False)
    op.alter_column('city', 'country_id',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.alter_column('city', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('city', 'city',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('category', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('category', 'name',
               existing_type=sa.VARCHAR(length=25),
               nullable=False)
    op.create_index('idx_fk_city_id', 'address', ['city_id'], unique=False)
    op.alter_column('address', 'city_id',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.alter_column('address', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('address', 'phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('address', 'district',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('address', 'address',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.create_index('idx_actor_last_name', 'actor', ['last_name'], unique=False)
    op.alter_column('actor', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('actor', 'last_name',
               existing_type=sa.VARCHAR(length=45),
               nullable=False)
    op.alter_column('actor', 'first_name',
               existing_type=sa.VARCHAR(length=45),
               nullable=False)
    # ### end Alembic commands ###
